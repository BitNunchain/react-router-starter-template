const { ethers } = require("ethers");
require("dotenv").config();

async function deployUniversalNFT() {
    console.log("🚀 Deploying UniversalNFT Contract...");
    
    // Setup provider and signer
    const provider = new ethers.JsonRpcProvider(process.env.POLYGON_RPC_URL);
    const signer = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
    
    console.log("Deployer:", signer.address);
    
    // Get balance
    const balance = await provider.getBalance(signer.address);
    console.log("Balance:", ethers.formatEther(balance), "MATIC");
    
    try {
        // Compile the contract (we'll use the bytecode directly)
        const contractCode = `
        608060405234801561001057600080fd5b506040516200316238038062003162833981810160405281019061003491906102b0565b6040518060200160405280600081525061004d816100a5565b506100666100616100c160201b60201c565b6100c9565b8060056000600a6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610376565b80600290816100b49190610518565b5050565b600033905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bf82610194565b9050919050565b6101cf816101b4565b81146101da57600080fd5b50565b6000815190506101ec816101c6565b92915050565b60006020828403121561020857610207610187565b5b6000610216848285016101dd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061029657607f821691505b6020821081036102a9576102a861024f565b5b50919050565b6000602082840312156102c5576102c4610187565b5b60006102d3848285016101dd565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061032b57607f821691505b60208210810361033e5761033d6102e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026103a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610369565b6103b08683610369565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103f76103f26103ed846103c8565b6103d2565b6103c8565b9050919050565b6000819050919050565b610411836103dc565b61042561041d826103fe565b848454610376565b825550505050565b600090565b61043a61042d565b610445818484610408565b505050565b5b818110156104695761045e600082610432565b60018101905061044b565b5050565b601f8211156104ae5761047f81610344565b61048884610359565b81016020851015610497578190505b6104ab6104a385610359565b83018261044a565b50505b505050565b600082821c905092915050565b60006104d1600019846008026104b3565b1980831691505092915050565b60006104ea83836104c0565b9150826002028217905092915050565b610503826102dc565b67ffffffffffffffff81111561051c5761051b61021f565b5b610526825461027e565b61053182828561046d565b600060209050601f8311600181146105645760008415610552578287015190505b61055c85826104de565b8655506105c4565b601f19841661057286610344565b60005b8281101561059a57848901518255600182019150602085019450602081019050610575565b868310156105b757848901516105b3601f8916826104c0565b8355505b6001600288020188555050505b505050505050565b612ddc80620005db6000396000f3fe`;
        
        console.log("Deploying contract...");
        
        // Get current gas price
        const feeData = await provider.getFeeData();
        console.log("Current gas price:", ethers.formatUnits(feeData.gasPrice, "gwei"), "gwei");
        
        // Deploy contract
        const factory = new ethers.ContractFactory(
            [], // We'll skip ABI for now, just deploy
            contractCode,
            signer
        );
        
        const contract = await factory.deploy(signer.address, {
            gasLimit: 3000000,
            gasPrice: ethers.parseUnits("40", "gwei")
        });
        
        console.log("Transaction sent:", contract.deploymentTransaction().hash);
        
        // Wait for deployment
        console.log("Waiting for confirmation...");
        await contract.waitForDeployment();
        
        const address = await contract.getAddress();
        
        console.log("✅ UniversalNFT deployed successfully!");
        console.log("📍 Contract Address:", address);
        console.log("🔗 PolygonScan:", `https://polygonscan.com/address/${address}`);
        
        return address;
        
    } catch (error) {
        console.error("❌ Deployment failed:", error.message);
        throw error;
    }
}

deployUniversalNFT()
    .then((address) => {
        console.log("NFT contract ready at:", address);
        process.exit(0);
    })
    .catch((error) => {
        console.error("Error:", error);
        process.exit(1);
    });